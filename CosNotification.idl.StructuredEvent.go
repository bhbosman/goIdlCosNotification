// Code generated by me. DO NOT EDIT.

package goIdlCosNotification

import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"
import __yaccidl__ "github.com/bhbosman/yaccidl"

// Struct declaration: "CosNotification::StructuredEvent", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type CosNotificationStructuredEvent struct {
	__goidl__.IdlObject
	Header CosNotificationEventHeader `json:"Header"`
	FilterableData CosNotificationFilterableEventBody `json:"FilterableData"`
	RemainderOfBody __goidl__.IdlAny `json:"RemainderOfBody"`
}

//noinspection GoSnakeCaseUsage
const CosNotificationStructuredEventId_Const = "IDL:omg.org/CosNotification/StructuredEvent:1.0"

func (self *CosNotificationStructuredEvent) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNotificationStructuredEvent) GoString() string {
	return self.String()
}

func (self *CosNotificationStructuredEvent) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlStruct)
	err = self.Header.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlStruct)
	err = self.FilterableData.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(AnyType)
	self.RemainderOfBody, err = __goidl__.IdlAnyHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNotificationStructuredEvent) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNotificationStructuredEvent) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlStruct)
	err = self.Header.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlStruct)
	err = self.FilterableData.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(AnyType)
	err = __goidl__.IdlAnyHelper.Write(stream, self.RemainderOfBody)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNotificationStructuredEvent_Helper struct {
}


//noinspection GoUnusedGlobalVariable
var CosNotificationStructuredEventHelper = CosNotificationStructuredEvent_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNotificationStructuredEventId_Const,
			__yaccidl__.IdlStruct,
			"CosNotification.idl.StructuredEvent.go",
			func() __goidl__.IIdlObject {
				return &CosNotificationStructuredEvent{}
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return &CosNotificationStructuredEvent{}
			},
			__reflect__.TypeOf((*CosNotificationStructuredEvent)(nil))))
}
